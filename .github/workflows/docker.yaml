# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# Builds ultralytics/ultralytics:latest images on DockerHub https://hub.docker.com/r/ultralytics

name: Publish Docker Images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      dockerfile:
        type: choice
        description: Select Dockerfile
        options:
          - Dockerfile-arm64
          - Dockerfile-jetson
          - Dockerfile-python
          - Dockerfile-cpu
          - Dockerfile

jobs:
  docker:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dockerfile: "Dockerfile-arm64"
            tags: "latest-arm64"
            platforms: "linux/arm64"
          - dockerfile: "Dockerfile-jetson"
            tags: "latest-jetson"
            platforms: "linux/arm64"
          - dockerfile: "Dockerfile-python"
            tags: "latest-python"
            platforms: "linux/amd64"
          - dockerfile: "Dockerfile-cpu"
            tags: "latest-cpu"
            platforms: "linux/amd64"
          - dockerfile: "Dockerfile"
            tags: "latest"
            platforms: "linux/amd64"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platforms }}
          file: docker/${{ matrix.dockerfile }}
          push: false
          load: true
          tags: ultralytics/ultralytics:${{ matrix.tags }}

      - name: Run tests
        if: matrix.dockerfile == 'Dockerfile-python'
        run: |
          docker run ultralytics/ultralytics:${{ matrix.tags }} /bin/bash -c "pip install 'ultralytics[dev]' && pytest tests"

      - name: Push image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platforms }}
          file: docker/${{ matrix.dockerfile }}
          push: true
          tags: ultralytics/ultralytics:${{ matrix.tags }}
